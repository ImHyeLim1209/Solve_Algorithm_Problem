// https://app.codility.com/programmers/lessons/16-greedy_algorithms/max_nonoverlapping_segments/
// 유사한 문제: https://www.acmicpc.net/problem/1931
// 겹치는 구간 덩어리가 몇개 있을까 세는 문제 => 그리디하게 푼다.
// 1. 모든 요소들을 시작지점 + 종료지점 순으로 정렬한다.
// 2. 겹치는 구간 덩어리를 센다.
function solution(A, B) {
  const segments = [];
  for (let i = 0; i < A.length; i++) {
    segments.push([A[i], B[i]]); //시작시간, 종료시간
  }

 // 정렬: 종료지점 오름차순 > 시작지점 오름차순
  segments
    .sort((a, b) => a[0] - b[0])
    .sort((a, b) => a[1] - b[1]);

  let cnt = 0;
  let sIdx = 0;
  let eIdx = 0;
  while (eIdx < A.length) {
    while (sIdx < A.length && segments[sIdx][0] <= segments[eIdx][1]) { // 종료시간을 기준으로 겹치는 segments 찾는다.
      sIdx++;
    }
    cnt++; //겹치는 segments들을 다 찾았다면 cnt++
    eIdx = sIdx; //겹치지 않는 다음 요소부터 시작
  }

  return cnt;
}

console.log(solution([1, 2], [1, 2]));
console.log(solution([1, 3, 7, 9, 9], [5, 6, 8, 9, 10]));
