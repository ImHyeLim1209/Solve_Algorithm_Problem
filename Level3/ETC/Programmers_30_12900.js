// https://programmers.co.kr/learn/courses/30/lessons/12900
// 가로 길이가 2이고 세로의 길이가 1인 직사각형모양의 타일로
// 세로의 길이가 2이고 가로의 길이가 n인 바닥을 가득 채우자.

// 1번 풀이 -> 시간초과
// 1개: 타일을 세로로 세운 1가지
// 2개: 타일을 세로로 혹은 가로로 세운 2가지
// 3개 = 1 + 1 + 1, 1 + 2,  2 + 1 이 가능하므로 3가지
// 4개 = 1+1+1+1 1+1+2 1+2+1 2+1+1 2+2 총 5가지 
function solution(n) {
  const aux = (sum, n) => {
    if (sum === n) return 1;
    else if (sum > n) return 0;

    return (aux(sum + 1, n) + aux(sum + 2, n)) % 1000000007;
  }
  return aux(0, n);
}


// 2.번풀이 = 타일을 처음에 세로로 놓은 경우 + 타일을 처음에 가로로 놓은 경우
// 세로로 놓은 경우 n-1칸이 남으므로 n-1개로 채우는 경우와 동일
// 가로로 놓은 경우 n-2칸이 남으므로 n-2개로 
// 3개: 타일을 처음에 세로로 놓은 경우(-> 2칸이 남으므로 2개로 채우는 경우와 동일) + 타일을 처음에 가로로 놓은 경우(-> 1칸이 남으므로 1개를 채우는 경우와 동일)
function solution(n) {
  const arr = [0, 1, 2];
  for (let i = 3; i <= n; i++) {
    arr.push((arr[i - 2] + arr[i - 1]) % 1000000007);
  }
  return arr[n];
}
